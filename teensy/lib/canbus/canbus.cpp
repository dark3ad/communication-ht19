/**
 * @file canbus.cpp
 * @author Jesper Mellquist
 * @brief Generated implementation for canbus module.
 *        DO NOT EDIT THIS FILE BY HAND.
 * @version 0.1
 * @date 2020-11-10
 *
 * @copyright Copyright (c) 2020
 *
 */

#include <canbus.h>

uint8_t get_temperature(void)
{
    return 0;
}

uint8_t get_humidity(void)
{
    return 0;
}

uint16_t get_flow_rate(void)
{
    return 0;
}

uint8_t get_light_intensity(void)
{
    return 0;
}

uint8_t get_water_level(void)
{
    return 0;
}

uint8_t get_soil_moisture(void)
{
    return 0;
}

uint8_t get_dht_sensor_status(void)
{
    return 0;
}

uint8_t get_flow_meter_sensor_status(void)
{
    return 0;
}

uint8_t get_light_intesity_sensor_status(void)
{
    return 0;
}

uint8_t get_water_level_sensor_status(void)
{
    return 0;
}

uint8_t get_soil_moisture_sensor_status(void)
{
    return 0;
}

uint8_t get_esp32_status(void)
{
    return 0;
}

uint8_t get_sdcard_status(void)
{
    return 0;
}

uint16_t get_sdcard_free_space(void)
{
    return 0;
}

uint8_t get_terminal_status(void)
{
    return 0;
}

uint8_t get_rtc_status(void)
{
    return 0;
}

uint16_t get_rtc_year(void)
{
    return 0;
}

uint8_t get_rtc_month(void)
{
    return 0;
}

uint8_t get_rtc_day(void)
{
    return 0;
}

uint8_t get_rtc_hour(void)
{
    return 0;
}

uint8_t get_rtc_minute(void)
{
    return 0;
}

uint8_t get_rtc_second(void)
{
    return 0;
}

uint8_t get_lamp_state(void)
{
    return 0;
}

uint8_t get_heater_state(void)
{
    return 0;
}

uint8_t get_water_pump_state(void)
{
    return 0;
}

uint8_t get_water_valve_state(void)
{
    return 0;
}

uint8_t get_window_ventilator_state(void)
{
    return 0;
}

uint8_t get_fan_state(void)
{
    return 0;
}

uint8_t get_lamp_status(void)
{
    return 0;
}

uint8_t get_heater_status(void)
{
    return 0;
}

uint8_t get_water_pump_status(void)
{
    return 0;
}

uint8_t get_water_valve_status(void)
{
    return 0;
}

uint8_t get_window_ventilator_status(void)
{
    return 0;
}

uint8_t get_fan_status(void)
{
    return 0;
}

uint8_t get_display_status(void)
{
    return 0;
}

uint8_t get_keypad_status(void)
{
    return 0;
}

uint8_t get_buzzer_status(void)
{
    return 0;
}

uint8_t get_rgb_status(void)
{
    return 0;
}

uint8_t get_epprom_status(void)
{
    return 0;
}

uint8_t get_system_status(void)
{
    return 0;
}

uint8_t get_temperature_cal_min_val(void)
{
    return 0;
}

uint8_t get_temperature_cal_max_val(void)
{
    return 0;
}

uint8_t get_humidity_cal_min_val(void)
{
    return 0;
}

uint8_t get_humidity_cal_max_val(void)
{
    return 0;
}

uint16_t get_flow_meter_cal_min_val(void)
{
    return 0;
}

uint16_t get_flow_meter_cal_max_val(void)
{
    return 0;
}

uint8_t get_temperature_target_min_val(void)
{
    return 0;
}

uint8_t get_temperature_target_max_val(void)
{
    return 0;
}

uint8_t get_humidity_target_min_val(void)
{
    return 0;
}

uint8_t get_humidity_target_max_val(void)
{
    return 0;
}

uint16_t get_flow_meter_target_min_val(void)
{
    return 0;
}

uint16_t get_flow_meter_target_max_val(void)
{
    return 0;
}

uint8_t get_light_intensity_target_min_val(void)
{
    return 0;
}

uint8_t get_water_level_target_min_val(void)
{
    return 0;
}

uint8_t get_water_level_target_max_val(void)
{
    return 0;
}

uint8_t get_soil_moisture_target_min_val(void)
{
    return 0;
}

uint8_t get_soil_moisture_target_max_val(void)
{
    return 0;
}

uint8_t get_water_level_cal_max_val(void)
{
    return 0;
}

uint8_t get_water_level_cal_min_val(void)
{
    return 0;
}

uint8_t get_soil_moisture_cal_min_val(void)
{
    return 0;
}

uint8_t get_soil_moisture_cal_max_val(void)
{
    return 0;
}

uint8_t get_light_intensity_cal_min_val(void)
{
    return 0;
}

uint8_t get_light_intensity_cal_max_val(void)
{
    return 0;
}

void set_esp32_status(uint8_t value)
{
}

void set_sdcard_status(uint8_t value)
{
}

void set_sdcard_free_space(uint16_t value)
{
}

void set_terminal_status(uint8_t value)
{
}

void set_rtc_status(uint8_t value)
{
}

void set_rtc_year(uint16_t value)
{
}

void set_rtc_month(uint8_t value)
{
}

void set_rtc_day(uint8_t value)
{
}

void set_rtc_hour(uint8_t value)
{
}

void set_rtc_minute(uint8_t value)
{
}

void set_rtc_second(uint8_t value)
{
}

void set_lamp_state(uint8_t value)
{
}

void set_heater_state(uint8_t value)
{
}

void set_water_pump_state(uint8_t value)
{
}

void set_water_valve_state(uint8_t value)
{
}

void set_window_ventilator_state(uint8_t value)
{
}

void set_fan_state(uint8_t value)
{
}

void set_temperature_cal_min_val(uint8_t value)
{
}

void set_temperature_cal_max_val(uint8_t value)
{
}

void set_humidity_cal_min_val(uint8_t value)
{
}

void set_humidity_cal_max_val(uint8_t value)
{
}

void set_flow_meter_cal_min_val(uint16_t value)
{
}

void set_flow_meter_cal_max_val(uint16_t value)
{
}

void set_temperature_target_min_val(uint8_t value)
{
}

void set_temperature_target_max_val(uint8_t value)
{
}

void set_humidity_target_min_val(uint8_t value)
{
}

void set_humidity_target_max_val(uint8_t value)
{
}

void set_flow_meter_target_min_val(uint16_t value)
{
}

void set_flow_meter_target_max_val(uint16_t value)
{
}

void set_light_intensity_target_min_val(uint8_t value)
{
}

void set_water_level_target_min_val(uint8_t value)
{
}

void set_water_level_target_max_val(uint8_t value)
{
}

void set_soil_moisture_target_min_val(uint8_t value)
{
}

void set_soil_moisture_target_max_val(uint8_t value)
{
}

void set_water_level_cal_max_val(uint8_t value)
{
}

void set_water_level_cal_min_val(uint8_t value)
{
}

void set_soil_moisture_cal_min_val(uint8_t value)
{
}

void set_soil_moisture_cal_max_val(uint8_t value)
{
}

void set_light_intensity_cal_min_val(uint8_t value)
{
}

void set_light_intensity_cal_max_val(uint8_t value)
{
}

bool validate_temperature_cal_min_val(void)
{
}

bool validate_temperature_cal_max_val(void)
{
}

bool validate_humidity_cal_min_val(void)
{
}

bool validate_humidity_cal_max_val(void)
{
}

bool validate_flow_meter_cal_min_val(void)
{
}

bool validate_flow_meter_cal_max_val(void)
{
}

bool validate_temperature_target_min_val(void)
{
}

bool validate_temperature_target_max_val(void)
{
}

bool validate_humidity_target_min_val(void)
{
}

bool validate_humidity_target_max_val(void)
{
}

bool validate_flow_meter_target_min_val(void)
{
}

bool validate_flow_meter_target_max_val(void)
{
}

bool validate_light_intensity_target_min_val(void)
{
}

bool validate_water_level_target_min_val(void)
{
}

bool validate_water_level_target_max_val(void)
{
}

bool validate_soil_moisture_target_min_val(void)
{
}

bool validate_soil_moisture_target_max_val(void)
{
}

bool validate_water_level_cal_max_val(void)
{
}

bool validate_water_level_cal_min_val(void)
{
}

bool validate_soil_moisture_cal_min_val(void)
{
}

bool validate_soil_moisture_cal_max_val(void)
{
}

bool validate_light_intensity_cal_min_val(void)
{
}

bool validate_light_intensity_cal_max_val(void)
{
}

void overwrite_lamp_state(bool value);
{
}

void overwrite_heater_state(bool value);
{
}

void overwrite_water_pump_state(bool value);
{
}

void overwrite_water_valve_state(bool value);
{
}

void overwrite_window_ventilator_state(bool value);
{
}

void overwrite_fan_state(bool value);
{
}

bool is_temperature_overwritten(void)
{
  return false;
}

bool is_humidity_overwritten(void)
{
  return false;
}

bool is_flow_rate_overwritten(void)
{
  return false;
}

bool is_light_intensity_overwritten(void)
{
  return false;
}

bool is_water_level_overwritten(void)
{
  return false;
}

bool is_soil_moisture_overwritten(void)
{
  return false;
}

bool is_dht_sensor_status_overwritten(void)
{
  return false;
}

bool is_flow_meter_sensor_status_overwritten(void)
{
  return false;
}

bool is_light_intesity_sensor_status_overwritten(void)
{
  return false;
}

bool is_water_level_sensor_status_overwritten(void)
{
  return false;
}

bool is_soil_moisture_sensor_status_overwritten(void)
{
  return false;
}

bool is_esp32_status_overwritten(void)
{
  return false;
}

bool is_sdcard_status_overwritten(void)
{
  return false;
}

bool is_sdcard_free_space_overwritten(void)
{
  return false;
}

bool is_terminal_status_overwritten(void)
{
  return false;
}

bool is_rtc_status_overwritten(void)
{
  return false;
}

bool is_rtc_year_overwritten(void)
{
  return false;
}

bool is_rtc_month_overwritten(void)
{
  return false;
}

bool is_rtc_day_overwritten(void)
{
  return false;
}

bool is_rtc_hour_overwritten(void)
{
  return false;
}

bool is_rtc_minute_overwritten(void)
{
  return false;
}

bool is_rtc_second_overwritten(void)
{
  return false;
}

bool is_lamp_state_overwritten(void)
{
  return false;
}

bool is_heater_state_overwritten(void)
{
  return false;
}

bool is_water_pump_state_overwritten(void)
{
  return false;
}

bool is_water_valve_state_overwritten(void)
{
  return false;
}

bool is_window_ventilator_state_overwritten(void)
{
  return false;
}

bool is_fan_state_overwritten(void)
{
  return false;
}

bool is_lamp_status_overwritten(void)
{
  return false;
}

bool is_heater_status_overwritten(void)
{
  return false;
}

bool is_water_pump_status_overwritten(void)
{
  return false;
}

bool is_water_valve_status_overwritten(void)
{
  return false;
}

bool is_window_ventilator_status_overwritten(void)
{
  return false;
}

bool is_fan_status_overwritten(void)
{
  return false;
}

bool is_display_status_overwritten(void)
{
  return false;
}

bool is_keypad_status_overwritten(void)
{
  return false;
}

bool is_buzzer_status_overwritten(void)
{
  return false;
}

bool is_rgb_status_overwritten(void)
{
  return false;
}

bool is_epprom_status_overwritten(void)
{
  return false;
}

bool is_system_status_overwritten(void)
{
  return false;
}

bool is_temperature_cal_min_val_overwritten(void)
{
  return false;
}

bool is_temperature_cal_max_val_overwritten(void)
{
  return false;
}

bool is_humidity_cal_min_val_overwritten(void)
{
  return false;
}

bool is_humidity_cal_max_val_overwritten(void)
{
  return false;
}

bool is_flow_meter_cal_min_val_overwritten(void)
{
  return false;
}

bool is_flow_meter_cal_max_val_overwritten(void)
{
  return false;
}

bool is_temperature_target_min_val_overwritten(void)
{
  return false;
}

bool is_temperature_target_max_val_overwritten(void)
{
  return false;
}

bool is_humidity_target_min_val_overwritten(void)
{
  return false;
}

bool is_humidity_target_max_val_overwritten(void)
{
  return false;
}

bool is_flow_meter_target_min_val_overwritten(void)
{
  return false;
}

bool is_flow_meter_target_max_val_overwritten(void)
{
  return false;
}

bool is_light_intensity_target_min_val_overwritten(void)
{
  return false;
}

bool is_water_level_target_min_val_overwritten(void)
{
  return false;
}

bool is_water_level_target_max_val_overwritten(void)
{
  return false;
}

bool is_soil_moisture_target_min_val_overwritten(void)
{
  return false;
}

bool is_soil_moisture_target_max_val_overwritten(void)
{
  return false;
}

bool is_water_level_cal_max_val_overwritten(void)
{
  return false;
}

bool is_water_level_cal_min_val_overwritten(void)
{
  return false;
}

bool is_soil_moisture_cal_min_val_overwritten(void)
{
  return false;
}

bool is_soil_moisture_cal_max_val_overwritten(void)
{
  return false;
}

bool is_light_intensity_cal_min_val_overwritten(void)
{
  return false;
}

bool is_light_intensity_cal_max_val_overwritten(void)
{
  return false;
}

